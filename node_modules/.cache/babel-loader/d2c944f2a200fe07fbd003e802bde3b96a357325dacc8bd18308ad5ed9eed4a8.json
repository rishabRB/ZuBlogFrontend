{"ast":null,"code":"import { publicRequest } from './requestMethod';\nimport { loginFailure, loginStart, loginSuccess } from '../features/';\nexport const LoginUser = async (dispatch, user) => {\n  try {\n    dispatch(loginStart());\n    const res = await publicRequest.get(`user/login?username=${user.username}&password=${user.password}`);\n    dispatch(loginSuccess(res.data));\n    localStorage.setItem(\"user\", res.data.username);\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\n_c = LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["publicRequest","loginFailure","loginStart","loginSuccess","LoginUser","dispatch","user","res","get","username","password","data","localStorage","setItem","err","_c","$RefreshReg$"],"sources":["/Users/rishabbibhuty/Programmings/fullstack/zuAi/frontend/src/features/apiCall.js"],"sourcesContent":["import { publicRequest } from './requestMethod'\nimport {loginFailure,loginStart,loginSuccess } from '../features/'\n\n\n\n\nexport const LoginUser = async (dispatch,user)=>{\n        try{\n        dispatch(loginStart())\n        const res = await publicRequest.get(`user/login?username=${user.username}&password=${user.password}`)\n        dispatch(loginSuccess(res.data))\n        localStorage.setItem(\"user\",res.data.username)\n        }\n        catch(err){\n            dispatch(loginFailure())\n        }\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAAQC,YAAY,EAACC,UAAU,EAACC,YAAY,QAAQ,cAAc;AAKlE,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAACC,IAAI,KAAG;EACxC,IAAG;IACHD,QAAQ,CAACH,UAAU,CAAC,CAAC,CAAC;IACtB,MAAMK,GAAG,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,uBAAuBF,IAAI,CAACG,QAAQ,aAAaH,IAAI,CAACI,QAAQ,EAAE,CAAC;IACrGL,QAAQ,CAACF,YAAY,CAACI,GAAG,CAACI,IAAI,CAAC,CAAC;IAChCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACN,GAAG,CAACI,IAAI,CAACF,QAAQ,CAAC;EAC9C,CAAC,CACD,OAAMK,GAAG,EAAC;IACNT,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;EAC5B;AACR,CAAC;AAAAc,EAAA,GAVYX,SAAS;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}